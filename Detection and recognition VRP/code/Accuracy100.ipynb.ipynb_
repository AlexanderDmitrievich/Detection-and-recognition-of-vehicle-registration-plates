{"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"rpO4KuufYLVk","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1681453969329,"user_tz":-180,"elapsed":17244,"user":{"displayName":"Александр Карпов","userId":"12613016527411721595"}},"outputId":"59c8124d-df6a-4cd1-809d-594f77a22d0e"},"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting ultralytics\n","  Downloading ultralytics-8.0.77-py3-none-any.whl (513 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m513.4/513.4 kB\u001b[0m \u001b[31m6.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: tqdm>=4.64.0 in /usr/local/lib/python3.9/dist-packages (from ultralytics) (4.65.0)\n","Requirement already satisfied: Pillow>=7.1.2 in /usr/local/lib/python3.9/dist-packages (from ultralytics) (8.4.0)\n","Collecting thop>=0.1.1\n","  Downloading thop-0.1.1.post2209072238-py3-none-any.whl (15 kB)\n","Requirement already satisfied: matplotlib>=3.2.2 in /usr/local/lib/python3.9/dist-packages (from ultralytics) (3.7.1)\n","Requirement already satisfied: opencv-python>=4.6.0 in /usr/local/lib/python3.9/dist-packages (from ultralytics) (4.7.0.72)\n","Requirement already satisfied: numpy>=1.21.6 in /usr/local/lib/python3.9/dist-packages (from ultralytics) (1.22.4)\n","Requirement already satisfied: PyYAML>=5.3.1 in /usr/local/lib/python3.9/dist-packages (from ultralytics) (6.0)\n","Requirement already satisfied: torch>=1.7.0 in /usr/local/lib/python3.9/dist-packages (from ultralytics) (2.0.0+cu118)\n","Requirement already satisfied: psutil in /usr/local/lib/python3.9/dist-packages (from ultralytics) (5.9.4)\n","Collecting sentry-sdk\n","  Downloading sentry_sdk-1.19.1-py2.py3-none-any.whl (199 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m199.2/199.2 kB\u001b[0m \u001b[31m10.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: pandas>=1.1.4 in /usr/local/lib/python3.9/dist-packages (from ultralytics) (1.5.3)\n","Requirement already satisfied: torchvision>=0.8.1 in /usr/local/lib/python3.9/dist-packages (from ultralytics) (0.15.1+cu118)\n","Requirement already satisfied: seaborn>=0.11.0 in /usr/local/lib/python3.9/dist-packages (from ultralytics) (0.12.2)\n","Requirement already satisfied: scipy>=1.4.1 in /usr/local/lib/python3.9/dist-packages (from ultralytics) (1.10.1)\n","Requirement already satisfied: requests>=2.23.0 in /usr/local/lib/python3.9/dist-packages (from ultralytics) (2.27.1)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.9/dist-packages (from matplotlib>=3.2.2->ultralytics) (1.4.4)\n","Requirement already satisfied: python-dateutil>=2.7 in /usr/local/lib/python3.9/dist-packages (from matplotlib>=3.2.2->ultralytics) (2.8.2)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.9/dist-packages (from matplotlib>=3.2.2->ultralytics) (0.11.0)\n","Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.9/dist-packages (from matplotlib>=3.2.2->ultralytics) (4.39.3)\n","Requirement already satisfied: importlib-resources>=3.2.0 in /usr/local/lib/python3.9/dist-packages (from matplotlib>=3.2.2->ultralytics) (5.12.0)\n","Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.9/dist-packages (from matplotlib>=3.2.2->ultralytics) (3.0.9)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.9/dist-packages (from matplotlib>=3.2.2->ultralytics) (23.0)\n","Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.9/dist-packages (from matplotlib>=3.2.2->ultralytics) (1.0.7)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.9/dist-packages (from pandas>=1.1.4->ultralytics) (2022.7.1)\n","Requirement already satisfied: urllib3<1.27,>=1.21.1 in /usr/local/lib/python3.9/dist-packages (from requests>=2.23.0->ultralytics) (1.26.15)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.9/dist-packages (from requests>=2.23.0->ultralytics) (3.4)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.9/dist-packages (from requests>=2.23.0->ultralytics) (2022.12.7)\n","Requirement already satisfied: charset-normalizer~=2.0.0 in /usr/local/lib/python3.9/dist-packages (from requests>=2.23.0->ultralytics) (2.0.12)\n","Requirement already satisfied: sympy in /usr/local/lib/python3.9/dist-packages (from torch>=1.7.0->ultralytics) (1.11.1)\n","Requirement already satisfied: triton==2.0.0 in /usr/local/lib/python3.9/dist-packages (from torch>=1.7.0->ultralytics) (2.0.0)\n","Requirement already satisfied: typing-extensions in /usr/local/lib/python3.9/dist-packages (from torch>=1.7.0->ultralytics) (4.5.0)\n","Requirement already satisfied: filelock in /usr/local/lib/python3.9/dist-packages (from torch>=1.7.0->ultralytics) (3.11.0)\n","Requirement already satisfied: networkx in /usr/local/lib/python3.9/dist-packages (from torch>=1.7.0->ultralytics) (3.1)\n","Requirement already satisfied: jinja2 in /usr/local/lib/python3.9/dist-packages (from torch>=1.7.0->ultralytics) (3.1.2)\n","Requirement already satisfied: cmake in /usr/local/lib/python3.9/dist-packages (from triton==2.0.0->torch>=1.7.0->ultralytics) (3.25.2)\n","Requirement already satisfied: lit in /usr/local/lib/python3.9/dist-packages (from triton==2.0.0->torch>=1.7.0->ultralytics) (16.0.1)\n","Requirement already satisfied: zipp>=3.1.0 in /usr/local/lib/python3.9/dist-packages (from importlib-resources>=3.2.0->matplotlib>=3.2.2->ultralytics) (3.15.0)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.9/dist-packages (from python-dateutil>=2.7->matplotlib>=3.2.2->ultralytics) (1.16.0)\n","Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.9/dist-packages (from jinja2->torch>=1.7.0->ultralytics) (2.1.2)\n","Requirement already satisfied: mpmath>=0.19 in /usr/local/lib/python3.9/dist-packages (from sympy->torch>=1.7.0->ultralytics) (1.3.0)\n","Installing collected packages: sentry-sdk, thop, ultralytics\n","Successfully installed sentry-sdk-1.19.1 thop-0.1.1.post2209072238 ultralytics-8.0.77\n"]}],"source":["!pip install ultralytics"]},{"cell_type":"code","source":["!pip install easyocr"],"metadata":{"id":"Y3KMbFolmhDp","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1681453994263,"user_tz":-180,"elapsed":16732,"user":{"displayName":"Александр Карпов","userId":"12613016527411721595"}},"outputId":"b7332917-11c3-44f1-f7b7-fca094c0e3ab"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting easyocr\n","  Downloading easyocr-1.6.2-py3-none-any.whl (2.9 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m2.9/2.9 MB\u001b[0m \u001b[31m21.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: torchvision>=0.5 in /usr/local/lib/python3.9/dist-packages (from easyocr) (0.15.1+cu118)\n","Requirement already satisfied: Pillow in /usr/local/lib/python3.9/dist-packages (from easyocr) (8.4.0)\n","Requirement already satisfied: scikit-image in /usr/local/lib/python3.9/dist-packages (from easyocr) (0.19.3)\n","Collecting python-bidi\n","  Downloading python_bidi-0.4.2-py2.py3-none-any.whl (30 kB)\n","Requirement already satisfied: torch in /usr/local/lib/python3.9/dist-packages (from easyocr) (2.0.0+cu118)\n","Collecting pyclipper\n","  Downloading pyclipper-1.3.0.post4-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.whl (608 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m608.2/608.2 kB\u001b[0m \u001b[31m22.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: Shapely in /usr/local/lib/python3.9/dist-packages (from easyocr) (2.0.1)\n","Collecting ninja\n","  Downloading ninja-1.11.1-py2.py3-none-manylinux_2_12_x86_64.manylinux2010_x86_64.whl (145 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m146.0/146.0 kB\u001b[0m \u001b[31m7.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: numpy in /usr/local/lib/python3.9/dist-packages (from easyocr) (1.22.4)\n","Requirement already satisfied: scipy in /usr/local/lib/python3.9/dist-packages (from easyocr) (1.10.1)\n","Collecting opencv-python-headless<=4.5.4.60\n","  Downloading opencv_python_headless-4.5.4.60-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (47.6 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m47.6/47.6 MB\u001b[0m \u001b[31m12.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: PyYAML in /usr/local/lib/python3.9/dist-packages (from easyocr) (6.0)\n","Requirement already satisfied: requests in /usr/local/lib/python3.9/dist-packages (from torchvision>=0.5->easyocr) (2.27.1)\n","Requirement already satisfied: typing-extensions in /usr/local/lib/python3.9/dist-packages (from torch->easyocr) (4.5.0)\n","Requirement already satisfied: networkx in /usr/local/lib/python3.9/dist-packages (from torch->easyocr) (3.1)\n","Requirement already satisfied: filelock in /usr/local/lib/python3.9/dist-packages (from torch->easyocr) (3.11.0)\n","Requirement already satisfied: sympy in /usr/local/lib/python3.9/dist-packages (from torch->easyocr) (1.11.1)\n","Requirement already satisfied: jinja2 in /usr/local/lib/python3.9/dist-packages (from torch->easyocr) (3.1.2)\n","Requirement already satisfied: triton==2.0.0 in /usr/local/lib/python3.9/dist-packages (from torch->easyocr) (2.0.0)\n","Requirement already satisfied: cmake in /usr/local/lib/python3.9/dist-packages (from triton==2.0.0->torch->easyocr) (3.25.2)\n","Requirement already satisfied: lit in /usr/local/lib/python3.9/dist-packages (from triton==2.0.0->torch->easyocr) (16.0.1)\n","Requirement already satisfied: six in /usr/local/lib/python3.9/dist-packages (from python-bidi->easyocr) (1.16.0)\n","Requirement already satisfied: tifffile>=2019.7.26 in /usr/local/lib/python3.9/dist-packages (from scikit-image->easyocr) (2023.3.21)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.9/dist-packages (from scikit-image->easyocr) (23.0)\n","Requirement already satisfied: PyWavelets>=1.1.1 in /usr/local/lib/python3.9/dist-packages (from scikit-image->easyocr) (1.4.1)\n","Requirement already satisfied: imageio>=2.4.1 in /usr/local/lib/python3.9/dist-packages (from scikit-image->easyocr) (2.25.1)\n","Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.9/dist-packages (from jinja2->torch->easyocr) (2.1.2)\n","Requirement already satisfied: urllib3<1.27,>=1.21.1 in /usr/local/lib/python3.9/dist-packages (from requests->torchvision>=0.5->easyocr) (1.26.15)\n","Requirement already satisfied: charset-normalizer~=2.0.0 in /usr/local/lib/python3.9/dist-packages (from requests->torchvision>=0.5->easyocr) (2.0.12)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.9/dist-packages (from requests->torchvision>=0.5->easyocr) (3.4)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.9/dist-packages (from requests->torchvision>=0.5->easyocr) (2022.12.7)\n","Requirement already satisfied: mpmath>=0.19 in /usr/local/lib/python3.9/dist-packages (from sympy->torch->easyocr) (1.3.0)\n","Installing collected packages: pyclipper, ninja, python-bidi, opencv-python-headless, easyocr\n","  Attempting uninstall: opencv-python-headless\n","    Found existing installation: opencv-python-headless 4.7.0.72\n","    Uninstalling opencv-python-headless-4.7.0.72:\n","      Successfully uninstalled opencv-python-headless-4.7.0.72\n","Successfully installed easyocr-1.6.2 ninja-1.11.1 opencv-python-headless-4.5.4.60 pyclipper-1.3.0.post4 python-bidi-0.4.2\n"]}]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Xr3AJHFXZomd","outputId":"54ca4eec-e2d3-4e87-9cee-aebe495fb4d0","executionInfo":{"status":"ok","timestamp":1681454010163,"user_tz":-180,"elapsed":9032,"user":{"displayName":"Александр Карпов","userId":"12613016527411721595"}}},"outputs":[{"output_type":"stream","name":"stderr","text":["Ultralytics YOLOv8.0.77 🚀 Python-3.9.16 torch-2.0.0+cu118 CPU\n","Setup complete ✅ (2 CPUs, 12.7 GB RAM, 23.4/107.7 GB disk)\n"]}],"source":["import numpy as np\n","import pandas as pd\n","import os\n","import re\n","import matplotlib.pyplot as plt\n","import imutils\n","import easyocr\n","import cv2\n","import ultralytics\n","from google.colab.patches import cv2_imshow\n","ultralytics.checks()"]},{"cell_type":"code","source":["os.mkdir('/content/test')"],"metadata":{"id":"QIKEq13kcfxq"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"IyLfepUtaISj","colab":{"base_uri":"https://localhost:8080/"},"outputId":"a08dcf68-25e5-47a3-8329-bc40cd4034f3","executionInfo":{"status":"ok","timestamp":1681454107632,"user_tz":-180,"elapsed":25559,"user":{"displayName":"Александр Карпов","userId":"12613016527411721595"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["Ultralytics YOLOv8.0.77 🚀 Python-3.9.16 torch-2.0.0+cu118 CPU\n","Model summary (fused): 168 layers, 11126745 parameters, 0 gradients, 28.4 GFLOPs\n","\n","image 1/25 /content/test/1.jpg: 384x640 1 car, 1 plate, 490.7ms\n","image 2/25 /content/test/10.jpg: 480x640 1 car, 1 plate, 521.3ms\n","image 3/25 /content/test/11.jpg: 480x640 2 cars, 1 plate, 459.9ms\n","image 4/25 /content/test/12.jpg: 448x640 1 car, 1 plate, 435.5ms\n","image 5/25 /content/test/13.jpg: 384x640 1 car, 1 plate, 417.2ms\n","image 6/25 /content/test/14.jpg: 384x640 1 car, 1 plate, 381.3ms\n","image 7/25 /content/test/15.jpg: 384x640 1 car, 1 plate, 380.2ms\n","image 8/25 /content/test/16.jpg: 384x640 1 car, 1 plate, 377.9ms\n","image 9/25 /content/test/17.jpg: 448x640 1 car, 1 plate, 615.0ms\n","image 10/25 /content/test/18.jpg: 512x640 1 car, 1 plate, 820.2ms\n","image 11/25 /content/test/19.jpg: 416x640 2 cars, 2 plates, 655.9ms\n","image 12/25 /content/test/2.jpg: 448x640 1 car, 1 plate, 717.5ms\n","image 13/25 /content/test/20.jpg: 480x640 3 cars, 1 plate, 546.7ms\n","image 14/25 /content/test/21.jpg: 480x640 3 cars, 2 plates, 463.2ms\n","image 15/25 /content/test/22.jpg: 448x640 1 car, 1 plate, 431.4ms\n","image 16/25 /content/test/23.jpg: 416x640 1 car, 1 plate, 387.9ms\n","image 17/25 /content/test/24.jpg: 448x640 1 car, 1 plate, 415.2ms\n","image 18/25 /content/test/25.jpg: 480x640 1 car, 1 plate, 446.8ms\n","image 19/25 /content/test/3.jpg: 448x640 1 car, 2 plates, 413.1ms\n","image 20/25 /content/test/4.jpg: 416x640 2 cars, 1 plate, 380.1ms\n","image 21/25 /content/test/5.jpg: 640x640 1 car, 1 plate, 607.1ms\n","image 22/25 /content/test/6.jpg: 448x640 1 car, 1 plate, 419.8ms\n","image 23/25 /content/test/7.jpg: 480x640 2 cars, 1 plate, 451.1ms\n","image 24/25 /content/test/8.jpg: 480x640 4 cars, 1 plate, 479.7ms\n","image 25/25 /content/test/9.jpg: 416x640 4 cars, 1 plate, 383.6ms\n","Speed: 1.2ms preprocess, 483.9ms inference, 2.1ms postprocess per image at shape (1, 3, 640, 640)\n","Results saved to \u001b[1mruns/detect/predict\u001b[0m\n","25 labels saved to runs/detect/predict/labels\n"]}],"source":["!yolo task=detect mode=predict model=/content/weights.pt conf=0.8 source=/content/test save=True save_txt = True"]},{"cell_type":"code","source":["def return_xy(File_data):\n","    '''\n","    Возвращает координаты x0,y0,x1,y1\n","    '''\n","    # Загрузка меток из тектстового документа, далее находим только метки номерных знаков.\n","    File_data = np.loadtxt(label_path, dtype=float)\n","    if File_data.ndim == 1:\n","        if File_data[0] == 1: \n","            x_0 = File_data[1]\n","            y_0 = File_data[2]\n","            h_2 = File_data[3]\n","            w_2 = File_data[4]\n","            mask = np.array([x_0,y_0,h_2,w_2])\n","        else:\n","          print('Номерных знаков на изображении нет')\n","    else:\n","        for i in range(len(File_data)):\n","          if File_data[i][0] == 1:\n","                x_0 = File_data[i][1]\n","                y_0 = File_data[i][2]\n","                h_2 = File_data[i][3]\n","                w_2 = File_data[i][4]\n","                mask = np.array([x_0,y_0,h_2,w_2])\n","                break\n","          else:\n","            continue\n","      # Координаты х у\n","    x0 = mask[0] - mask[2]/2\n","    y0 = mask[1] - mask[3]/2\n","    x1 = mask[0] + mask[2]/2\n","    y1 = mask[1] + mask[3]/2\n","\n","    return np.array([[x0,y0], [x1,y1]])"],"metadata":{"id":"2CBITm5pf21F"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def rectangle(label_path, image_path):\n","    '''\n","    Возвращает изображение номерного знака\n","    '''\n","    xy = return_xy(label_path)\n","\n","    cvmat = cv2.imread(image_path,0)\n","\n","    h,w = cvmat.shape\n","    offset = 5\n","    start_point = (int(xy[0][0] * w), int(xy[0][1] * h))\n","    end_point   = (int(xy[1][0] * w), int(xy[1][1] * h))\n","    \n","    cvmat = cv2.rectangle(cvmat, start_point, end_point, (255, 0, 0), 1)\n","    crop_img = cvmat[start_point[1]:end_point[1], start_point[0]:end_point[0]]\n","\n","    return crop_img"],"metadata":{"id":"9EV4S-YJjex7"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def preprocess_OCR(image):\n","    '''\n","      Обрабокта изображения перед OCR\n","    '''\n","    equ = cv2.equalizeHist(plate_img)\n","    # Нормализация распределенеим Гаусса\n","    blur = cv2.GaussianBlur(equ, (7, 7), 1)\n","\n","    th2 = 100 # Настраиваемый параметр\n","    blur[blur>=th2] = 255\n","    blur[blur<th2]  = 0\n","\n","    return blur"],"metadata":{"id":"0LoVxbcgPf50"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Алгоритм OCR"],"metadata":{"id":"f1nKt-owfk4_"}},{"cell_type":"code","source":["label_dir = sorted(os.listdir('/content/runs/detect/predict/labels/'))\n","\n","answer = []\n","image_ides = []\n","reader = easyocr.Reader(['en'])\n","\n","for image_id in range(len(label_dir)):\n","    image_id = os.path.splitext(label_dir[image_id])[0]\n","    # print(image_id)\n","    label_path = '/content/runs/detect/predict/labels/{}.txt'.format(image_id)\n","    image_path = '/content/test/{}.jpg'.format(image_id)\n","    # print(label_path, image_path)\n","    plate_img = rectangle(label_path, image_path)\n","    image_OCR = preprocess_OCR(plate_img)\n","\n","    \n","    output = reader.readtext(image_OCR)\n","    image_ides.append(image_id)\n","    s = output[0][1]\n","    predict = re.sub(r\"\\s+\", \"\", s)\n","    predict = re.sub(\"[^A-Za-z0-9]\", \"\", predict)\n","    predict = predict.upper()\n","    answer.append(predict)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MbbPs-FkRrly","outputId":"553c2934-7e9d-4304-a217-340c4803acda","executionInfo":{"status":"ok","timestamp":1681454172986,"user_tz":-180,"elapsed":23060,"user":{"displayName":"Александр Карпов","userId":"12613016527411721595"}}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["WARNING:easyocr.easyocr:CUDA not available - defaulting to CPU. Note: This module is much faster with a GPU.\n","WARNING:easyocr.easyocr:Downloading detection model, please wait. This may take several minutes depending upon your network connection.\n"]},{"output_type":"stream","name":"stdout","text":["Progress: |██████████████████████████████████████████████████| 100.0% Complete"]},{"output_type":"stream","name":"stderr","text":["WARNING:easyocr.easyocr:Downloading recognition model, please wait. This may take several minutes depending upon your network connection.\n"]},{"output_type":"stream","name":"stdout","text":["Progress: |██████████████████████████████████████████████████| 100.0% Complete"]}]},{"cell_type":"code","source":["print('Полученные результаты')\n","print(answer)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1L-1w1WQdVrM","outputId":"8228d2d9-cd9b-45f0-c9de-4f9b85cff15b","executionInfo":{"status":"ok","timestamp":1681454177968,"user_tz":-180,"elapsed":610,"user":{"displayName":"Александр Карпов","userId":"12613016527411721595"}}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Полученные результаты\n","['EOO8EE77', '003MH', 'COO1AC777', 'XOOJMH777', 'H999C19', '424IHM763', 'B888BB88', 'FVC5T', 'Y222EE777', 'B2ZZOP199', 'XOO1EP777', 'K999M4772', 'P837AM777', 'BOO9XB192', 'M6661Z6', 'POJIXX177', 'BSSSBX777', 'K816E4763', 'M6661M777', '9ASF', 'CCC4GZ', '911KH7ZZ', 'XOOIXX177', 'M77ZAM7TZ', 'A777AA37']\n"]}]},{"cell_type":"code","source":["def accuracy_set(a, b):\n","  \"\"\"\n","  Расчет пересечения множеств\n","  \"\"\"\n","  predict = len(set(a).intersection(b))\n","  predict_goal = len(set(b))\n","  accuracy = predict/predict_goal\n","\n","  return accuracy"],"metadata":{"id":"v36kUIDjdxdX"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def calculate_metric(answer, predict):\n","  '''\n","    Расчет метрики качества OCR\n","  '''\n","  accuracy = []\n","  for i in range(len(answer)):\n","    a = [*answer[i]]\n","    b = [*predict[i]]\n","    calculate = accuracy_set(a,b)\n","    accuracy.append(calculate)\n","  return np.round(np.array(accuracy).mean(), 4)"],"metadata":{"id":"7km8TKhydxoz"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Расчет метрики"],"metadata":{"id":"-BHA14QZftZS"}},{"cell_type":"code","source":["df_goal = pd.read_csv('/content/label.csv')\n","df_goal = df_goal['Правильные номера']\n","\n","predict = []\n","for i in range(len(df_goal)):\n","    predict.append(df_goal[i])\n","\n","print('Метрика качества, фильтр 100 :', calculate_metric(answer, predict))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OqXcb6PhdDsu","outputId":"1c19167d-d9f3-4369-dd50-6886a790e972","executionInfo":{"status":"ok","timestamp":1681454208298,"user_tz":-180,"elapsed":471,"user":{"displayName":"Александр Карпов","userId":"12613016527411721595"}}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Метрика качества, фильтр 100 : 0.8549\n"]}]},{"cell_type":"markdown","source":["### Предсказанные и истинные значения"],"metadata":{"id":"y64cxFrHgsjD"}},{"cell_type":"code","source":["df_goal = pd.read_csv('/content/label.csv')\n","df_goal['Предсказание'] = answer\n","df_goal[['Правильные номера','Предсказание']].head(5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"-VWWsmI4hXhI","outputId":"4b020e62-41e3-430f-dcdc-1406211f8203","executionInfo":{"status":"ok","timestamp":1681454225190,"user_tz":-180,"elapsed":517,"user":{"displayName":"Александр Карпов","userId":"12613016527411721595"}}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  Правильные номера Предсказание\n","0          E008EE77     EOO8EE77\n","1          O003MH96        003MH\n","2         C001AC777    COO1AC777\n","3         X007MH777    XOOJMH777\n","4          H999CT99      H999C19"],"text/html":["\n","  <div id=\"df-0af07e18-8093-4365-b1ea-2790805c899b\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Правильные номера</th>\n","      <th>Предсказание</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>E008EE77</td>\n","      <td>EOO8EE77</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>O003MH96</td>\n","      <td>003MH</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>C001AC777</td>\n","      <td>COO1AC777</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>X007MH777</td>\n","      <td>XOOJMH777</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>H999CT99</td>\n","      <td>H999C19</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0af07e18-8093-4365-b1ea-2790805c899b')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-0af07e18-8093-4365-b1ea-2790805c899b button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-0af07e18-8093-4365-b1ea-2790805c899b');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":14}]},{"cell_type":"markdown","source":["### Различные параметры порога(фильтр) th2 при обработке"],"metadata":{"id":"weJHjqQMdFKV"}},{"cell_type":"code","source":["df_goal = pd.read_csv('/content/predict_goal.csv')\n","df_goal = df_goal['Правильные номера']\n","\n","predict = []\n","for i in range(len(df_goal)):\n","    predict.append(df_goal[i])\n","\n","print('Метрика качества, фильтр 80 :', calculate_metric(answer, predict))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3D7489OZePqE","outputId":"b94105a5-8720-4369-e4cd-16e4caf33d0f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Метрика качества, фильтр 80 : 0.858\n"]}]},{"cell_type":"code","source":["df_goal = pd.read_csv('/content/predict_goal.csv')\n","df_goal = df_goal['Правильные номера']\n","\n","predict = []\n","for i in range(len(df_goal)):\n","    predict.append(df_goal[i])\n","\n","print('Метрика качества, фильтр 120 :', calculate_metric(answer, predict))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_2oRZ2TOeavT","outputId":"d9dd996e-6640-4ed7-a265-f81257d632b7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Метрика качества, фильтр 120 : 0.816\n"]}]}],"metadata":{"colab":{"provenance":[{"file_id":"10M_xkpVVO7e2d2hE8JUay07pEfUYdhaR","timestamp":1681322760152}]},"gpuClass":"standard","kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}